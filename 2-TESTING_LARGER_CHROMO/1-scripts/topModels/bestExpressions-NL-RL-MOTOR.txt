def funcNL_MOTOR_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( ( v16 + v9 ) +sin( v11 )) + v17 ) + ( ( v5 + v7 ) - ( ( v14 - v20 ) + ( v26 + v8 ) ) ) ) / 3.805249853314283 ) 
def funcNL_MOTOR_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( v5 + v22 ) + ( ( ( ( v16 - ( ( v5 + v22 ) + v12 ) ) + ( ( v9 - ( v2 - v15 ) ) + (cos( v22 )* v7 ) ) ) - ( ( v5 + v22 ) + v12 ) ) *tan(cos( -13.838461599647731 ))) ) 
def funcNL_MOTOR_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( 0.3655808368714908 * ( ( v15 + v5 ) - ( ( v8 + ( ( v24 + ( ( v17 - v12 ) +sin( v5 )) ) / -1.994764314641717 ) ) - v19 ) ) ) 
def funcNL_MOTOR_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( v1 - v2 ) + (sin( v4 )+ v5 ) ) * (cos(sin( v21 ))/ ( 4.297895256770474 + ( ( v26 - v20 ) +cos(exp( v21 ))) ) ) ) - ( ( ( v26 - v20 ) - ( v23 + v21 ) ) *tan( 12.888524592895934 )) ) 
def funcNL_MOTOR_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( (sin( v18 )* ( v20 - v14 ) ) - v22 ) - (sin( v21 )+ ( v20 + ( v5 + v21 ) ) ) ) *tan(tan( 12.341377585138972 ))) 
def funcNL_MOTOR_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( v0 + ( ( ( ( ( v21 + ( v11 - v2 ) ) + v9 ) - v14 ) + v1 ) + v17 ) ) / ( 4.728901458938864 - ( v15 - v18 ) ) ) 
def funcNL_MOTOR_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( v22 + ( v5 + v21 ) ) *tan( 6.644320356873983 )) + ( ( v1 - ( ( v26 + v12 ) -sin( v26 )) ) / ( v26 + ( 6.644320356873983 + ( v14 - ( v5 + v21 ) ) ) ) ) ) 
def funcNL_MOTOR_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( (sin( ( ( v20 - ( v0 - v22 ) ) + v2 ) )+ ( v20 + v2 ) ) + ( ( ( v20 + v21 ) - ( ( v0 - v22 ) - v1 ) ) - v26 ) ) / 4.549567952014677 ) 
def funcNL_MOTOR_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( ( v26 - v9 ) - v8 ) - v21 ) / -2.62069231299148 ) + ( ( ( v24 + ( v17 -cos( (cos( v9 )- v5 ) )) ) / (exp(exp( v27 ))+tan( 1.0545091207199278 )) ) + ( v5 - v8 ) ) ) 
def funcNL_MOTOR_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return  ( ( ( ( ( v22 + v5 ) + ( v5 - v8 ) ) + v20 ) + ( v21 - ( ( v16 - ( v11 + v14 ) ) / ( ( v5 - v22 ) -abs( 3.5670462725088683 )) ) ) ) /abs( 3.5670462725088683 )) 

funcsNL_MOTOR = [funcNL_MOTOR_100307,funcNL_MOTOR_100408,funcNL_MOTOR_101006,funcNL_MOTOR_101107,funcNL_MOTOR_101309,funcNL_MOTOR_101410,funcNL_MOTOR_101915,funcNL_MOTOR_102008,funcNL_MOTOR_102311,funcNL_MOTOR_102816,]
