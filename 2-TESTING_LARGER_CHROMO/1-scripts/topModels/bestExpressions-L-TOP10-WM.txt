def funcL_100307(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -3.39208262173e-13 * 1 + -0.0773999017499 * v0 + 0.123392885109 * v3 + 0.100416884935 * v4 + 0.205863766688 * v15 + 0.153839508207 * v16 + 0.382289920982 * v17 + 0.0548572861346 * v20 + 0.0281280842482 * v27 + 0.0665961749396 * v28
def funcL_100408(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 4.2724070809e-15 * 1 + 0.047124264896 * v4 + 0.279973893566 * v5 + 0.106441799546 * v7 + -0.259464224185 * v8 + 0.152282525861 * v15 + 0.20868925622 * v17 + 0.1049480222 * v20 + 0.258656375375 * v21 + 0.218982564401 * v25
def funcL_101006(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.46915465904e-13 * 1 + -0.235649783738 * v3 + 0.222744525714 * v5 + 0.222758560182 * v9 + 0.187875716853 * v12 + -0.139461137931 * v13 + 0.311547234417 * v16 + 0.230324738654 * v19 + 0.00277730359988 * v25 + 0.152371996684 * v28
def funcL_101107(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.2614735645e-13 * 1 + 0.0254310293096 * v1 + -0.00196729096379 * v4 + 0.0121224141266 * v16 + 0.383616171029 * v17 + 0.126377843697 * v18 + 0.244253248579 * v20 + 0.430472272281 * v22 + 0.0161414671144 * v23 + -0.237150468875 * v27
def funcL_101309(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.31672320217e-13 * 1 + 0.0281557030779 * v4 + 0.158029694847 * v5 + 0.00518964311065 * v6 + 0.0712665074559 * v8 + -0.0306555971339 * v14 + 0.163065353531 * v20 + 0.286340562743 * v25 + 0.0345026532351 * v26 + 0.315790931279 * v27
def funcL_101410(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 9.21732308534e-14 * 1 + 0.166817320958 * v5 + 0.0898026571336 * v10 + 0.0197817854336 * v11 + 0.228416138643 * v15 + 0.333377512216 * v17 + 0.0461203913501 * v18 + 0.190497321072 * v22 + 0.238667895563 * v23 + -0.223153401071 * v27
def funcL_101915(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.66607179442e-13 * 1 + 0.227718717724 * v1 + 0.153134626691 * v4 + 0.0690613444574 * v8 + 0.171726522356 * v15 + -0.09478162884 * v17 + 0.00129721778258 * v18 + 0.315906510179 * v20 + 0.466662950409 * v21 + -0.313680389612 * v27
def funcL_102008(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -2.86917841916e-14 * 1 + 0.0318229321619 * v1 + 0.437205148497 * v2 + 0.0237826680957 * v6 + 0.125818785578 * v7 + 0.112916819875 * v15 + 0.0959742522085 * v17 + 0.309506928904 * v20 + 0.0424412533429 * v23 + -0.111952874487 * v27
def funcL_102311(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return 1.15124056121e-13 * 1 + -0.0729308158662 * v4 + 0.274164999642 * v5 + 0.0884724018039 * v9 + 0.124143890742 * v11 + 0.204007721987 * v15 + 0.10793185673 * v17 + 0.0927813437454 * v20 + 0.182231501399 * v21 + 0.071161472104 * v22
def funcL_102816(v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29): return -1.11545321591e-13 * 1 + 0.345328637027 * v4 + 0.199443163604 * v7 + -0.0126495119359 * v8 + 0.0772303793715 * v12 + -0.103032288669 * v15 + 0.00184219348093 * v17 + 0.042028803326 * v20 + 0.441599931252 * v21 + 0.0423558142683 * v27

funcsL = [funcL_100307,funcL_100408,funcL_101006,funcL_101107,funcL_101309,funcL_101410,funcL_101915,funcL_102008,funcL_102311,funcL_102816,]